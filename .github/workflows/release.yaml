name: Auto Version Bump

on:
  push:
    branches: [ release-test ]
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  version-bump:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Configure Git
        run: |
          git config --global user.name "rajVadlamudi"
          git config --global user.email "vadlamudiraju@gmail.com"

      - name: Initialize package.json
        run: |
          if [ ! -f package.json ]; then
            echo '{
              "name": "'${GITHUB_REPOSITORY#*/}'",
              "version": "0.0.0",
              "main": "dist/index.js",
              "repository": {
                "type": "git",
                "url": "https://github.com/'$GITHUB_REPOSITORY'.git"
              }
            }' > package.json
          fi

      - name: Get current version
        id: current_version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Determine version bump type
        id: version_type
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "type=${{ github.event.inputs.version_type }}" >> $GITHUB_OUTPUT
          else
            # Analyze recent commits
            COMMITS=$(git log --oneline -10)
            if echo "$COMMITS" | grep -q "BREAKING CHANGE\|^feat!\|^fix!\|^refactor!"; then
              echo "type=major" >> $GITHUB_OUTPUT
            elif echo "$COMMITS" | grep -q "^feat:"; then
              echo "type=minor" >> $GITHUB_OUTPUT
            else
              echo "type=patch" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Bump version
        id: bump
        run: |
          npm version ${{ steps.version_type.outputs.type }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Commit and tag
        run: |
          git add package.json
          git commit -m "chore: bump version to ${{ steps.bump.outputs.version }}"
          git tag "v${{ steps.bump.outputs.version }}"
          git push origin release-test

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.bump.outputs.version }}
          release_name: Release v${{ steps.bump.outputs.version }}
          body: |
            Automated release v${{ steps.bump.outputs.version }}
            
            Changes since v${{ steps.current_version.outputs.version }}:
            - Updated dist/index.js
          draft: false
          prerelease: false